
um:     file format elf64-x86-64


Disassembly of section .init:

0000000000400908 <_init>:
  400908:	f3 0f 1e fa          	endbr64 
  40090c:	48 83 ec 08          	sub    $0x8,%rsp
  400910:	48 8b 05 d1 26 20 00 	mov    0x2026d1(%rip),%rax        # 602fe8 <__gmon_start__@Base>
  400917:	48 85 c0             	test   %rax,%rax
  40091a:	74 02                	je     40091e <_init+0x16>
  40091c:	ff d0                	callq  *%rax
  40091e:	48 83 c4 08          	add    $0x8,%rsp
  400922:	c3                   	retq   

Disassembly of section .plt:

0000000000400930 <.plt>:
  400930:	ff 35 d2 26 20 00    	pushq  0x2026d2(%rip)        # 603008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400936:	ff 25 d4 26 20 00    	jmpq   *0x2026d4(%rip)        # 603010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40093c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400940 <free@plt>:
  400940:	ff 25 d2 26 20 00    	jmpq   *0x2026d2(%rip)        # 603018 <free@GLIBC_2.2.5>
  400946:	68 00 00 00 00       	pushq  $0x0
  40094b:	e9 e0 ff ff ff       	jmpq   400930 <.plt>

0000000000400950 <abort@plt>:
  400950:	ff 25 ca 26 20 00    	jmpq   *0x2026ca(%rip)        # 603020 <abort@GLIBC_2.2.5>
  400956:	68 01 00 00 00       	pushq  $0x1
  40095b:	e9 d0 ff ff ff       	jmpq   400930 <.plt>

0000000000400960 <fclose@plt>:
  400960:	ff 25 c2 26 20 00    	jmpq   *0x2026c2(%rip)        # 603028 <fclose@GLIBC_2.2.5>
  400966:	68 02 00 00 00       	pushq  $0x2
  40096b:	e9 c0 ff ff ff       	jmpq   400930 <.plt>

0000000000400970 <fgetc@plt>:
  400970:	ff 25 ba 26 20 00    	jmpq   *0x2026ba(%rip)        # 603030 <fgetc@GLIBC_2.2.5>
  400976:	68 03 00 00 00       	pushq  $0x3
  40097b:	e9 b0 ff ff ff       	jmpq   400930 <.plt>

0000000000400980 <fputc@plt>:
  400980:	ff 25 b2 26 20 00    	jmpq   *0x2026b2(%rip)        # 603038 <fputc@GLIBC_2.2.5>
  400986:	68 04 00 00 00       	pushq  $0x4
  40098b:	e9 a0 ff ff ff       	jmpq   400930 <.plt>

0000000000400990 <calloc@plt>:
  400990:	ff 25 aa 26 20 00    	jmpq   *0x2026aa(%rip)        # 603040 <calloc@GLIBC_2.2.5>
  400996:	68 05 00 00 00       	pushq  $0x5
  40099b:	e9 90 ff ff ff       	jmpq   400930 <.plt>

00000000004009a0 <fprintf@plt>:
  4009a0:	ff 25 a2 26 20 00    	jmpq   *0x2026a2(%rip)        # 603048 <fprintf@GLIBC_2.2.5>
  4009a6:	68 06 00 00 00       	pushq  $0x6
  4009ab:	e9 80 ff ff ff       	jmpq   400930 <.plt>

00000000004009b0 <feof@plt>:
  4009b0:	ff 25 9a 26 20 00    	jmpq   *0x20269a(%rip)        # 603050 <feof@GLIBC_2.2.5>
  4009b6:	68 07 00 00 00       	pushq  $0x7
  4009bb:	e9 70 ff ff ff       	jmpq   400930 <.plt>

00000000004009c0 <malloc@plt>:
  4009c0:	ff 25 92 26 20 00    	jmpq   *0x202692(%rip)        # 603058 <malloc@GLIBC_2.2.5>
  4009c6:	68 08 00 00 00       	pushq  $0x8
  4009cb:	e9 60 ff ff ff       	jmpq   400930 <.plt>

00000000004009d0 <fflush@plt>:
  4009d0:	ff 25 8a 26 20 00    	jmpq   *0x20268a(%rip)        # 603060 <fflush@GLIBC_2.2.5>
  4009d6:	68 09 00 00 00       	pushq  $0x9
  4009db:	e9 50 ff ff ff       	jmpq   400930 <.plt>

00000000004009e0 <realloc@plt>:
  4009e0:	ff 25 82 26 20 00    	jmpq   *0x202682(%rip)        # 603068 <realloc@GLIBC_2.2.5>
  4009e6:	68 0a 00 00 00       	pushq  $0xa
  4009eb:	e9 40 ff ff ff       	jmpq   400930 <.plt>

00000000004009f0 <longjmp@plt>:
  4009f0:	ff 25 7a 26 20 00    	jmpq   *0x20267a(%rip)        # 603070 <longjmp@GLIBC_2.2.5>
  4009f6:	68 0b 00 00 00       	pushq  $0xb
  4009fb:	e9 30 ff ff ff       	jmpq   400930 <.plt>

0000000000400a00 <fopen@plt>:
  400a00:	ff 25 72 26 20 00    	jmpq   *0x202672(%rip)        # 603078 <fopen@GLIBC_2.2.5>
  400a06:	68 0c 00 00 00       	pushq  $0xc
  400a0b:	e9 20 ff ff ff       	jmpq   400930 <.plt>

0000000000400a10 <exit@plt>:
  400a10:	ff 25 6a 26 20 00    	jmpq   *0x20266a(%rip)        # 603080 <exit@GLIBC_2.2.5>
  400a16:	68 0d 00 00 00       	pushq  $0xd
  400a1b:	e9 10 ff ff ff       	jmpq   400930 <.plt>

0000000000400a20 <fwrite@plt>:
  400a20:	ff 25 62 26 20 00    	jmpq   *0x202662(%rip)        # 603088 <fwrite@GLIBC_2.2.5>
  400a26:	68 0e 00 00 00       	pushq  $0xe
  400a2b:	e9 00 ff ff ff       	jmpq   400930 <.plt>

Disassembly of section .text:

0000000000400a30 <main>:
  400a30:	41 55                	push   %r13
  400a32:	41 54                	push   %r12
  400a34:	55                   	push   %rbp
  400a35:	83 ff 02             	cmp    $0x2,%edi
  400a38:	75 42                	jne    400a7c <main+0x4c>
  400a3a:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400a3e:	be 30 1f 40 00       	mov    $0x401f30,%esi
  400a43:	4c 8b 25 86 26 20 00 	mov    0x202686(%rip),%r12        # 6030d0 <stdin@@GLIBC_2.2.5>
  400a4a:	4c 8b 2d 6f 26 20 00 	mov    0x20266f(%rip),%r13        # 6030c0 <stdout@@GLIBC_2.2.5>
  400a51:	e8 aa ff ff ff       	callq  400a00 <fopen@plt>
  400a56:	48 89 c5             	mov    %rax,%rbp
  400a59:	48 85 c0             	test   %rax,%rax
  400a5c:	74 43                	je     400aa1 <main+0x71>
  400a5e:	4c 89 ee             	mov    %r13,%rsi
  400a61:	4c 89 e7             	mov    %r12,%rdi
  400a64:	48 89 c2             	mov    %rax,%rdx
  400a67:	e8 ca 06 00 00       	callq  401136 <runProgram>
  400a6c:	48 89 ef             	mov    %rbp,%rdi
  400a6f:	e8 ec fe ff ff       	callq  400960 <fclose@plt>
  400a74:	5d                   	pop    %rbp
  400a75:	31 c0                	xor    %eax,%eax
  400a77:	41 5c                	pop    %r12
  400a79:	41 5d                	pop    %r13
  400a7b:	c3                   	retq   
  400a7c:	bf e0 1e 40 00       	mov    $0x401ee0,%edi
  400a81:	ba 23 00 00 00       	mov    $0x23,%edx
  400a86:	be 01 00 00 00       	mov    $0x1,%esi
  400a8b:	48 8b 0d 4e 26 20 00 	mov    0x20264e(%rip),%rcx        # 6030e0 <stderr@@GLIBC_2.2.5>
  400a92:	e8 89 ff ff ff       	callq  400a20 <fwrite@plt>
  400a97:	bf 01 00 00 00       	mov    $0x1,%edi
  400a9c:	e8 6f ff ff ff       	callq  400a10 <exit@plt>
  400aa1:	bf 08 1f 40 00       	mov    $0x401f08,%edi
  400aa6:	ba 24 00 00 00       	mov    $0x24,%edx
  400aab:	be 01 00 00 00       	mov    $0x1,%esi
  400ab0:	48 8b 0d 29 26 20 00 	mov    0x202629(%rip),%rcx        # 6030e0 <stderr@@GLIBC_2.2.5>
  400ab7:	e8 64 ff ff ff       	callq  400a20 <fwrite@plt>
  400abc:	bf 01 00 00 00       	mov    $0x1,%edi
  400ac1:	e8 4a ff ff ff       	callq  400a10 <exit@plt>

0000000000400ac6 <.annobin_elf_init.c.hot>:
  400ac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400acd:	00 00 00 

0000000000400ad0 <_start>:
  400ad0:	f3 0f 1e fa          	endbr64 
  400ad4:	31 ed                	xor    %ebp,%ebp
  400ad6:	49 89 d1             	mov    %rdx,%r9
  400ad9:	5e                   	pop    %rsi
  400ada:	48 89 e2             	mov    %rsp,%rdx
  400add:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400ae1:	50                   	push   %rax
  400ae2:	54                   	push   %rsp
  400ae3:	49 c7 c0 c0 1e 40 00 	mov    $0x401ec0,%r8
  400aea:	48 c7 c1 50 1e 40 00 	mov    $0x401e50,%rcx
  400af1:	48 c7 c7 30 0a 40 00 	mov    $0x400a30,%rdi
  400af8:	ff 15 e2 24 20 00    	callq  *0x2024e2(%rip)        # 602fe0 <__libc_start_main@GLIBC_2.2.5>
  400afe:	f4                   	hlt    

0000000000400aff <.annobin_init.c>:
  400aff:	90                   	nop

0000000000400b00 <_dl_relocate_static_pie>:
  400b00:	f3 0f 1e fa          	endbr64 
  400b04:	c3                   	retq   

0000000000400b05 <.annobin__dl_relocate_static_pie.end>:
  400b05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b0c:	00 00 00 
  400b0f:	90                   	nop

0000000000400b10 <deregister_tm_clones>:
  400b10:	48 8d 3d a9 25 20 00 	lea    0x2025a9(%rip),%rdi        # 6030c0 <stdout@@GLIBC_2.2.5>
  400b17:	48 8d 05 a2 25 20 00 	lea    0x2025a2(%rip),%rax        # 6030c0 <stdout@@GLIBC_2.2.5>
  400b1e:	48 39 f8             	cmp    %rdi,%rax
  400b21:	74 15                	je     400b38 <deregister_tm_clones+0x28>
  400b23:	48 8b 05 ae 24 20 00 	mov    0x2024ae(%rip),%rax        # 602fd8 <_ITM_deregisterTMCloneTable@Base>
  400b2a:	48 85 c0             	test   %rax,%rax
  400b2d:	74 09                	je     400b38 <deregister_tm_clones+0x28>
  400b2f:	ff e0                	jmpq   *%rax
  400b31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400b38:	c3                   	retq   
  400b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400b40 <register_tm_clones>:
  400b40:	48 8d 3d 79 25 20 00 	lea    0x202579(%rip),%rdi        # 6030c0 <stdout@@GLIBC_2.2.5>
  400b47:	48 8d 35 72 25 20 00 	lea    0x202572(%rip),%rsi        # 6030c0 <stdout@@GLIBC_2.2.5>
  400b4e:	48 29 fe             	sub    %rdi,%rsi
  400b51:	48 89 f0             	mov    %rsi,%rax
  400b54:	48 c1 ee 3f          	shr    $0x3f,%rsi
  400b58:	48 c1 f8 03          	sar    $0x3,%rax
  400b5c:	48 01 c6             	add    %rax,%rsi
  400b5f:	48 d1 fe             	sar    %rsi
  400b62:	74 14                	je     400b78 <register_tm_clones+0x38>
  400b64:	48 8b 05 85 24 20 00 	mov    0x202485(%rip),%rax        # 602ff0 <_ITM_registerTMCloneTable@Base>
  400b6b:	48 85 c0             	test   %rax,%rax
  400b6e:	74 08                	je     400b78 <register_tm_clones+0x38>
  400b70:	ff e0                	jmpq   *%rax
  400b72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400b78:	c3                   	retq   
  400b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400b80 <__do_global_dtors_aux>:
  400b80:	f3 0f 1e fa          	endbr64 
  400b84:	80 3d 5d 25 20 00 00 	cmpb   $0x0,0x20255d(%rip)        # 6030e8 <completed.0>
  400b8b:	75 13                	jne    400ba0 <__do_global_dtors_aux+0x20>
  400b8d:	55                   	push   %rbp
  400b8e:	48 89 e5             	mov    %rsp,%rbp
  400b91:	e8 7a ff ff ff       	callq  400b10 <deregister_tm_clones>
  400b96:	c6 05 4b 25 20 00 01 	movb   $0x1,0x20254b(%rip)        # 6030e8 <completed.0>
  400b9d:	5d                   	pop    %rbp
  400b9e:	c3                   	retq   
  400b9f:	90                   	nop
  400ba0:	c3                   	retq   
  400ba1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400ba8:	00 00 00 00 
  400bac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bb0 <frame_dummy>:
  400bb0:	f3 0f 1e fa          	endbr64 
  400bb4:	eb 8a                	jmp    400b40 <register_tm_clones>

0000000000400bb6 <expandSegments>:
  400bb6:	55                   	push   %rbp
  400bb7:	48 89 e5             	mov    %rsp,%rbp
  400bba:	48 83 ec 30          	sub    $0x30,%rsp
  400bbe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  400bc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400bc6:	8b 40 0c             	mov    0xc(%rax),%eax
  400bc9:	89 45 f8             	mov    %eax,-0x8(%rbp)
  400bcc:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400bcf:	01 c0                	add    %eax,%eax
  400bd1:	89 45 f4             	mov    %eax,-0xc(%rbp)
  400bd4:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400bd7:	b9 7c 00 00 00       	mov    $0x7c,%ecx
  400bdc:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  400be1:	be 10 00 00 00       	mov    $0x10,%esi
  400be6:	48 89 c7             	mov    %rax,%rdi
  400be9:	e8 e5 0e 00 00       	callq  401ad3 <Mem_calloc>
  400bee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400bf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400bf6:	48 8b 00             	mov    (%rax),%rax
  400bf9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400bfd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400c04:	eb 54                	jmp    400c5a <expandSegments+0xa4>
  400c06:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400c09:	48 c1 e0 04          	shl    $0x4,%rax
  400c0d:	48 89 c2             	mov    %rax,%rdx
  400c10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400c14:	48 01 d0             	add    %rdx,%rax
  400c17:	8b 55 fc             	mov    -0x4(%rbp),%edx
  400c1a:	48 89 d1             	mov    %rdx,%rcx
  400c1d:	48 c1 e1 04          	shl    $0x4,%rcx
  400c21:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400c25:	48 01 ca             	add    %rcx,%rdx
  400c28:	48 8b 00             	mov    (%rax),%rax
  400c2b:	48 89 02             	mov    %rax,(%rdx)
  400c2e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400c31:	48 c1 e0 04          	shl    $0x4,%rax
  400c35:	48 89 c2             	mov    %rax,%rdx
  400c38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400c3c:	48 01 d0             	add    %rdx,%rax
  400c3f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  400c42:	48 89 d1             	mov    %rdx,%rcx
  400c45:	48 c1 e1 04          	shl    $0x4,%rcx
  400c49:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400c4d:	48 01 ca             	add    %rcx,%rdx
  400c50:	8b 40 08             	mov    0x8(%rax),%eax
  400c53:	89 42 08             	mov    %eax,0x8(%rdx)
  400c56:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  400c5a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400c5d:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  400c60:	72 a4                	jb     400c06 <expandSegments+0x50>
  400c62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400c66:	48 8b 00             	mov    (%rax),%rax
  400c69:	ba 82 00 00 00       	mov    $0x82,%edx
  400c6e:	be 38 1f 40 00       	mov    $0x401f38,%esi
  400c73:	48 89 c7             	mov    %rax,%rdi
  400c76:	e8 14 0f 00 00       	callq  401b8f <Mem_free>
  400c7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400c7f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  400c86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400c8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400c8e:	48 89 10             	mov    %rdx,(%rax)
  400c91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400c95:	8b 55 f4             	mov    -0xc(%rbp),%edx
  400c98:	89 50 0c             	mov    %edx,0xc(%rax)
  400c9b:	90                   	nop
  400c9c:	c9                   	leaveq 
  400c9d:	c3                   	retq   

0000000000400c9e <expandNextSeen>:
  400c9e:	55                   	push   %rbp
  400c9f:	48 89 e5             	mov    %rsp,%rbp
  400ca2:	48 83 ec 30          	sub    $0x30,%rsp
  400ca6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  400caa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400cae:	8b 40 18             	mov    0x18(%rax),%eax
  400cb1:	89 45 f8             	mov    %eax,-0x8(%rbp)
  400cb4:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400cb7:	01 c0                	add    %eax,%eax
  400cb9:	89 45 f4             	mov    %eax,-0xc(%rbp)
  400cbc:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400cbf:	b9 8b 00 00 00       	mov    $0x8b,%ecx
  400cc4:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  400cc9:	be 04 00 00 00       	mov    $0x4,%esi
  400cce:	48 89 c7             	mov    %rax,%rdi
  400cd1:	e8 fd 0d 00 00       	callq  401ad3 <Mem_calloc>
  400cd6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400cda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400cde:	48 8b 40 10          	mov    0x10(%rax),%rax
  400ce2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400ce6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400ced:	eb 2c                	jmp    400d1b <expandNextSeen+0x7d>
  400cef:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400cf2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  400cf9:	00 
  400cfa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400cfe:	48 01 d0             	add    %rdx,%rax
  400d01:	8b 55 fc             	mov    -0x4(%rbp),%edx
  400d04:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
  400d0b:	00 
  400d0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400d10:	48 01 ca             	add    %rcx,%rdx
  400d13:	8b 00                	mov    (%rax),%eax
  400d15:	89 02                	mov    %eax,(%rdx)
  400d17:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  400d1b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400d1e:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  400d21:	72 cc                	jb     400cef <expandNextSeen+0x51>
  400d23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400d27:	48 8b 40 10          	mov    0x10(%rax),%rax
  400d2b:	ba 91 00 00 00       	mov    $0x91,%edx
  400d30:	be 38 1f 40 00       	mov    $0x401f38,%esi
  400d35:	48 89 c7             	mov    %rax,%rdi
  400d38:	e8 52 0e 00 00       	callq  401b8f <Mem_free>
  400d3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400d41:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  400d48:	00 
  400d49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400d4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400d51:	48 89 50 10          	mov    %rdx,0x10(%rax)
  400d55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400d59:	8b 55 f4             	mov    -0xc(%rbp),%edx
  400d5c:	89 50 18             	mov    %edx,0x18(%rax)
  400d5f:	90                   	nop
  400d60:	c9                   	leaveq 
  400d61:	c3                   	retq   

0000000000400d62 <Mem_new>:
  400d62:	55                   	push   %rbp
  400d63:	48 89 e5             	mov    %rsp,%rbp
  400d66:	48 83 ec 10          	sub    $0x10,%rsp
  400d6a:	ba a1 00 00 00       	mov    $0xa1,%edx
  400d6f:	be 38 1f 40 00       	mov    $0x401f38,%esi
  400d74:	bf 20 00 00 00       	mov    $0x20,%edi
  400d79:	e8 c6 0c 00 00       	callq  401a44 <Mem_alloc>
  400d7e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400d82:	b9 a2 00 00 00       	mov    $0xa2,%ecx
  400d87:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  400d8c:	be 10 00 00 00       	mov    $0x10,%esi
  400d91:	bf 00 01 00 00       	mov    $0x100,%edi
  400d96:	e8 38 0d 00 00       	callq  401ad3 <Mem_calloc>
  400d9b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400d9f:	48 89 02             	mov    %rax,(%rdx)
  400da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400da6:	48 8b 00             	mov    (%rax),%rax
  400da9:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
  400db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400db4:	48 8b 00             	mov    (%rax),%rax
  400db7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  400dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400dc2:	c7 40 0c 00 01 00 00 	movl   $0x100,0xc(%rax)
  400dc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400dcd:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
  400dd4:	b9 a8 00 00 00       	mov    $0xa8,%ecx
  400dd9:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  400dde:	be 04 00 00 00       	mov    $0x4,%esi
  400de3:	bf 00 01 00 00       	mov    $0x100,%edi
  400de8:	e8 e6 0c 00 00       	callq  401ad3 <Mem_calloc>
  400ded:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400df1:	48 89 42 10          	mov    %rax,0x10(%rdx)
  400df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400df9:	c7 40 18 00 01 00 00 	movl   $0x100,0x18(%rax)
  400e00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e04:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  400e0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e0f:	c9                   	leaveq 
  400e10:	c3                   	retq   

0000000000400e11 <Mem_freeMemory>:
  400e11:	55                   	push   %rbp
  400e12:	48 89 e5             	mov    %rsp,%rbp
  400e15:	48 83 ec 30          	sub    $0x30,%rsp
  400e19:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  400e1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400e21:	48 8b 00             	mov    (%rax),%rax
  400e24:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400e28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400e2c:	8b 40 08             	mov    0x8(%rax),%eax
  400e2f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  400e32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400e36:	48 8b 00             	mov    (%rax),%rax
  400e39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400e3d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400e44:	eb 5e                	jmp    400ea4 <Mem_freeMemory+0x93>
  400e46:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400e49:	48 c1 e0 04          	shl    $0x4,%rax
  400e4d:	48 89 c2             	mov    %rax,%rdx
  400e50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400e54:	48 01 d0             	add    %rdx,%rax
  400e57:	48 8b 00             	mov    (%rax),%rax
  400e5a:	48 85 c0             	test   %rax,%rax
  400e5d:	74 40                	je     400e9f <Mem_freeMemory+0x8e>
  400e5f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400e62:	48 c1 e0 04          	shl    $0x4,%rax
  400e66:	48 89 c2             	mov    %rax,%rdx
  400e69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400e6d:	48 01 d0             	add    %rdx,%rax
  400e70:	48 8b 00             	mov    (%rax),%rax
  400e73:	ba c0 00 00 00       	mov    $0xc0,%edx
  400e78:	be 38 1f 40 00       	mov    $0x401f38,%esi
  400e7d:	48 89 c7             	mov    %rax,%rdi
  400e80:	e8 0a 0d 00 00       	callq  401b8f <Mem_free>
  400e85:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400e88:	48 c1 e0 04          	shl    $0x4,%rax
  400e8c:	48 89 c2             	mov    %rax,%rdx
  400e8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400e93:	48 01 d0             	add    %rdx,%rax
  400e96:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  400e9d:	eb 01                	jmp    400ea0 <Mem_freeMemory+0x8f>
  400e9f:	90                   	nop
  400ea0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  400ea4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400ea7:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  400eaa:	72 9a                	jb     400e46 <Mem_freeMemory+0x35>
  400eac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400eb0:	48 8b 00             	mov    (%rax),%rax
  400eb3:	ba c3 00 00 00       	mov    $0xc3,%edx
  400eb8:	be 38 1f 40 00       	mov    $0x401f38,%esi
  400ebd:	48 89 c7             	mov    %rax,%rdi
  400ec0:	e8 ca 0c 00 00       	callq  401b8f <Mem_free>
  400ec5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400ec9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  400ed0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400ed4:	48 8b 40 10          	mov    0x10(%rax),%rax
  400ed8:	ba c4 00 00 00       	mov    $0xc4,%edx
  400edd:	be 38 1f 40 00       	mov    $0x401f38,%esi
  400ee2:	48 89 c7             	mov    %rax,%rdi
  400ee5:	e8 a5 0c 00 00       	callq  401b8f <Mem_free>
  400eea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400eee:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  400ef5:	00 
  400ef6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400efa:	48 8b 00             	mov    (%rax),%rax
  400efd:	ba c5 00 00 00       	mov    $0xc5,%edx
  400f02:	be 38 1f 40 00       	mov    $0x401f38,%esi
  400f07:	48 89 c7             	mov    %rax,%rdi
  400f0a:	e8 80 0c 00 00       	callq  401b8f <Mem_free>
  400f0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400f13:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  400f1a:	90                   	nop
  400f1b:	c9                   	leaveq 
  400f1c:	c3                   	retq   

0000000000400f1d <Mem_mapNew>:
  400f1d:	55                   	push   %rbp
  400f1e:	48 89 e5             	mov    %rsp,%rbp
  400f21:	53                   	push   %rbx
  400f22:	48 83 ec 28          	sub    $0x28,%rsp
  400f26:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  400f2a:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  400f2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400f31:	8b 40 1c             	mov    0x1c(%rax),%eax
  400f34:	85 c0                	test   %eax,%eax
  400f36:	0f 85 b9 00 00 00    	jne    400ff5 <Mem_mapNew+0xd8>
  400f3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400f40:	8b 50 0c             	mov    0xc(%rax),%edx
  400f43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400f47:	8b 40 08             	mov    0x8(%rax),%eax
  400f4a:	39 c2                	cmp    %eax,%edx
  400f4c:	75 0c                	jne    400f5a <Mem_mapNew+0x3d>
  400f4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400f52:	48 89 c7             	mov    %rax,%rdi
  400f55:	e8 5c fc ff ff       	callq  400bb6 <expandSegments>
  400f5a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  400f5e:	74 37                	je     400f97 <Mem_mapNew+0x7a>
  400f60:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  400f63:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  400f67:	48 8b 0a             	mov    (%rdx),%rcx
  400f6a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  400f6e:	8b 52 08             	mov    0x8(%rdx),%edx
  400f71:	89 d2                	mov    %edx,%edx
  400f73:	48 c1 e2 04          	shl    $0x4,%rdx
  400f77:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
  400f7b:	b9 da 00 00 00       	mov    $0xda,%ecx
  400f80:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  400f85:	be 04 00 00 00       	mov    $0x4,%esi
  400f8a:	48 89 c7             	mov    %rax,%rdi
  400f8d:	e8 41 0b 00 00       	callq  401ad3 <Mem_calloc>
  400f92:	48 89 03             	mov    %rax,(%rbx)
  400f95:	eb 1e                	jmp    400fb5 <Mem_mapNew+0x98>
  400f97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400f9b:	48 8b 10             	mov    (%rax),%rdx
  400f9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400fa2:	8b 40 08             	mov    0x8(%rax),%eax
  400fa5:	89 c0                	mov    %eax,%eax
  400fa7:	48 c1 e0 04          	shl    $0x4,%rax
  400fab:	48 01 d0             	add    %rdx,%rax
  400fae:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  400fb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400fb9:	48 8b 10             	mov    (%rax),%rdx
  400fbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400fc0:	8b 40 08             	mov    0x8(%rax),%eax
  400fc3:	89 c0                	mov    %eax,%eax
  400fc5:	48 c1 e0 04          	shl    $0x4,%rax
  400fc9:	48 01 c2             	add    %rax,%rdx
  400fcc:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  400fcf:	89 42 08             	mov    %eax,0x8(%rdx)
  400fd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400fd6:	8b 40 08             	mov    0x8(%rax),%eax
  400fd9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  400fdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400fe0:	8b 40 08             	mov    0x8(%rax),%eax
  400fe3:	8d 50 01             	lea    0x1(%rax),%edx
  400fe6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400fea:	89 50 08             	mov    %edx,0x8(%rax)
  400fed:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400ff0:	e9 a1 00 00 00       	jmpq   401096 <Mem_mapNew+0x179>
  400ff5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400ff9:	8b 40 1c             	mov    0x1c(%rax),%eax
  400ffc:	8d 50 ff             	lea    -0x1(%rax),%edx
  400fff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401003:	89 50 1c             	mov    %edx,0x1c(%rax)
  401006:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40100a:	8b 40 1c             	mov    0x1c(%rax),%eax
  40100d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  401010:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401014:	48 8b 50 10          	mov    0x10(%rax),%rdx
  401018:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40101b:	48 c1 e0 02          	shl    $0x2,%rax
  40101f:	48 01 d0             	add    %rdx,%rax
  401022:	8b 00                	mov    (%rax),%eax
  401024:	89 45 e8             	mov    %eax,-0x18(%rbp)
  401027:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  40102b:	74 31                	je     40105e <Mem_mapNew+0x141>
  40102d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401030:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  401034:	48 8b 0a             	mov    (%rdx),%rcx
  401037:	8b 55 e8             	mov    -0x18(%rbp),%edx
  40103a:	48 c1 e2 04          	shl    $0x4,%rdx
  40103e:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
  401042:	b9 e9 00 00 00       	mov    $0xe9,%ecx
  401047:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  40104c:	be 04 00 00 00       	mov    $0x4,%esi
  401051:	48 89 c7             	mov    %rax,%rdi
  401054:	e8 7a 0a 00 00       	callq  401ad3 <Mem_calloc>
  401059:	48 89 03             	mov    %rax,(%rbx)
  40105c:	eb 1e                	jmp    40107c <Mem_mapNew+0x15f>
  40105e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401062:	48 8b 10             	mov    (%rax),%rdx
  401065:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401069:	8b 40 08             	mov    0x8(%rax),%eax
  40106c:	89 c0                	mov    %eax,%eax
  40106e:	48 c1 e0 04          	shl    $0x4,%rax
  401072:	48 01 d0             	add    %rdx,%rax
  401075:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  40107c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401080:	48 8b 10             	mov    (%rax),%rdx
  401083:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401086:	48 c1 e0 04          	shl    $0x4,%rax
  40108a:	48 01 c2             	add    %rax,%rdx
  40108d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401090:	89 42 08             	mov    %eax,0x8(%rdx)
  401093:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401096:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  40109a:	c9                   	leaveq 
  40109b:	c3                   	retq   

000000000040109c <Mem_mapFree>:
  40109c:	55                   	push   %rbp
  40109d:	48 89 e5             	mov    %rsp,%rbp
  4010a0:	48 83 ec 20          	sub    $0x20,%rsp
  4010a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4010a8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4010ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4010af:	48 8b 10             	mov    (%rax),%rdx
  4010b2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4010b5:	48 c1 e0 04          	shl    $0x4,%rax
  4010b9:	48 01 d0             	add    %rdx,%rax
  4010bc:	48 8b 00             	mov    (%rax),%rax
  4010bf:	ba fe 00 00 00       	mov    $0xfe,%edx
  4010c4:	be 38 1f 40 00       	mov    $0x401f38,%esi
  4010c9:	48 89 c7             	mov    %rax,%rdi
  4010cc:	e8 be 0a 00 00       	callq  401b8f <Mem_free>
  4010d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4010d5:	48 8b 10             	mov    (%rax),%rdx
  4010d8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4010db:	48 c1 e0 04          	shl    $0x4,%rax
  4010df:	48 01 d0             	add    %rdx,%rax
  4010e2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4010e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4010ed:	8b 40 1c             	mov    0x1c(%rax),%eax
  4010f0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4010f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4010f7:	8b 40 18             	mov    0x18(%rax),%eax
  4010fa:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  4010fd:	75 0c                	jne    40110b <Mem_mapFree+0x6f>
  4010ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401103:	48 89 c7             	mov    %rax,%rdi
  401106:	e8 93 fb ff ff       	callq  400c9e <expandNextSeen>
  40110b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40110f:	48 8b 50 10          	mov    0x10(%rax),%rdx
  401113:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401116:	48 c1 e0 02          	shl    $0x2,%rax
  40111a:	48 01 c2             	add    %rax,%rdx
  40111d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401120:	89 02                	mov    %eax,(%rdx)
  401122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401126:	8b 40 1c             	mov    0x1c(%rax),%eax
  401129:	8d 50 01             	lea    0x1(%rax),%edx
  40112c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401130:	89 50 1c             	mov    %edx,0x1c(%rax)
  401133:	90                   	nop
  401134:	c9                   	leaveq 
  401135:	c3                   	retq   

0000000000401136 <runProgram>:
  401136:	55                   	push   %rbp
  401137:	48 89 e5             	mov    %rsp,%rbp
  40113a:	53                   	push   %rbx
  40113b:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  401142:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
  401149:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
  401150:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  401157:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
  40115e:	00 
  40115f:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  401166:	00 
  401167:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
  40116e:	00 
  40116f:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
  401176:	00 
  401177:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40117e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  401185:	b8 00 00 00 00       	mov    $0x0,%eax
  40118a:	e8 d3 fb ff ff       	callq  400d62 <Mem_new>
  40118f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  401196:	c7 45 e4 00 01 00 00 	movl   $0x100,-0x1c(%rbp)
  40119d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4011a0:	b9 1d 01 00 00       	mov    $0x11d,%ecx
  4011a5:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  4011aa:	be 04 00 00 00       	mov    $0x4,%esi
  4011af:	48 89 c7             	mov    %rax,%rdi
  4011b2:	e8 1c 09 00 00       	callq  401ad3 <Mem_calloc>
  4011b7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4011bb:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  4011c2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  4011c9:	48 89 c7             	mov    %rax,%rdi
  4011cc:	e8 9f f7 ff ff       	callq  400970 <fgetc@plt>
  4011d1:	88 45 d3             	mov    %al,-0x2d(%rbp)
  4011d4:	e9 ea 00 00 00       	jmpq   4012c3 <runProgram+0x18d>
  4011d9:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  4011e0:	c7 45 c8 03 00 00 00 	movl   $0x3,-0x38(%rbp)
  4011e7:	eb 29                	jmp    401212 <runProgram+0xdc>
  4011e9:	0f b6 55 d3          	movzbl -0x2d(%rbp),%edx
  4011ed:	8b 45 c8             	mov    -0x38(%rbp),%eax
  4011f0:	c1 e0 03             	shl    $0x3,%eax
  4011f3:	89 c1                	mov    %eax,%ecx
  4011f5:	d3 e2                	shl    %cl,%edx
  4011f7:	89 d0                	mov    %edx,%eax
  4011f9:	09 45 cc             	or     %eax,-0x34(%rbp)
  4011fc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  401203:	48 89 c7             	mov    %rax,%rdi
  401206:	e8 65 f7 ff ff       	callq  400970 <fgetc@plt>
  40120b:	88 45 d3             	mov    %al,-0x2d(%rbp)
  40120e:	83 6d c8 01          	subl   $0x1,-0x38(%rbp)
  401212:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
  401216:	79 d1                	jns    4011e9 <runProgram+0xb3>
  401218:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40121b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  401222:	00 
  401223:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401227:	48 01 c2             	add    %rax,%rdx
  40122a:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40122d:	89 02                	mov    %eax,(%rdx)
  40122f:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
  401233:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  401236:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  401239:	0f 85 84 00 00 00    	jne    4012c3 <runProgram+0x18d>
  40123f:	d1 65 e4             	shll   -0x1c(%rbp)
  401242:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401245:	b9 2e 01 00 00       	mov    $0x12e,%ecx
  40124a:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  40124f:	be 04 00 00 00       	mov    $0x4,%esi
  401254:	48 89 c7             	mov    %rax,%rdi
  401257:	e8 77 08 00 00       	callq  401ad3 <Mem_calloc>
  40125c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  401260:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  401267:	eb 2c                	jmp    401295 <runProgram+0x15f>
  401269:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40126c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  401273:	00 
  401274:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401278:	48 01 d0             	add    %rdx,%rax
  40127b:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  40127e:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
  401285:	00 
  401286:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40128a:	48 01 ca             	add    %rcx,%rdx
  40128d:	8b 00                	mov    (%rax),%eax
  40128f:	89 02                	mov    %eax,(%rdx)
  401291:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
  401295:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  401298:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  40129b:	72 cc                	jb     401269 <runProgram+0x133>
  40129d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4012a1:	ba 32 01 00 00       	mov    $0x132,%edx
  4012a6:	be 38 1f 40 00       	mov    $0x401f38,%esi
  4012ab:	48 89 c7             	mov    %rax,%rdi
  4012ae:	e8 dc 08 00 00       	callq  401b8f <Mem_free>
  4012b3:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  4012ba:	00 
  4012bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4012bf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4012c3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  4012ca:	48 89 c7             	mov    %rax,%rdi
  4012cd:	e8 de f6 ff ff       	callq  4009b0 <feof@plt>
  4012d2:	85 c0                	test   %eax,%eax
  4012d4:	0f 84 ff fe ff ff    	je     4011d9 <runProgram+0xa3>
  4012da:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4012e1:	48 8b 00             	mov    (%rax),%rax
  4012e4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4012e8:	48 89 10             	mov    %rdx,(%rax)
  4012eb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4012f2:	48 8b 00             	mov    (%rax),%rax
  4012f5:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4012f8:	89 50 08             	mov    %edx,0x8(%rax)
  4012fb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4012fe:	89 45 e8             	mov    %eax,-0x18(%rbp)
  401301:	e9 f7 02 00 00       	jmpq   4015fd <runProgram+0x4c7>
  401306:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40130d:	48 8b 00             	mov    (%rax),%rax
  401310:	48 8b 10             	mov    (%rax),%rdx
  401313:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401316:	48 c1 e0 02          	shl    $0x2,%rax
  40131a:	48 01 d0             	add    %rdx,%rax
  40131d:	8b 00                	mov    (%rax),%eax
  40131f:	89 45 bc             	mov    %eax,-0x44(%rbp)
  401322:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  401326:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401329:	c1 e8 1c             	shr    $0x1c,%eax
  40132c:	89 45 b8             	mov    %eax,-0x48(%rbp)
  40132f:	83 7d b8 0d          	cmpl   $0xd,-0x48(%rbp)
  401333:	0f 87 bd 02 00 00    	ja     4015f6 <runProgram+0x4c0>
  401339:	8b 45 b8             	mov    -0x48(%rbp),%eax
  40133c:	48 8b 04 c5 40 1f 40 	mov    0x401f40(,%rax,8),%rax
  401343:	00 
  401344:	ff e0                	jmpq   *%rax
  401346:	8b 55 bc             	mov    -0x44(%rbp),%edx
  401349:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  40134d:	89 d6                	mov    %edx,%esi
  40134f:	48 89 c7             	mov    %rax,%rdi
  401352:	e8 53 03 00 00       	callq  4016aa <CPU_cmove>
  401357:	e9 a1 02 00 00       	jmpq   4015fd <runProgram+0x4c7>
  40135c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  401363:	48 8b 10             	mov    (%rax),%rdx
  401366:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401369:	c1 e8 03             	shr    $0x3,%eax
  40136c:	83 e0 07             	and    $0x7,%eax
  40136f:	89 c0                	mov    %eax,%eax
  401371:	8b 44 85 80          	mov    -0x80(%rbp,%rax,4),%eax
  401375:	89 c0                	mov    %eax,%eax
  401377:	48 c1 e0 04          	shl    $0x4,%rax
  40137b:	48 01 d0             	add    %rdx,%rax
  40137e:	48 8b 10             	mov    (%rax),%rdx
  401381:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401384:	83 e0 07             	and    $0x7,%eax
  401387:	89 c0                	mov    %eax,%eax
  401389:	8b 44 85 80          	mov    -0x80(%rbp,%rax,4),%eax
  40138d:	89 c0                	mov    %eax,%eax
  40138f:	48 c1 e0 02          	shl    $0x2,%rax
  401393:	48 01 d0             	add    %rdx,%rax
  401396:	8b 55 bc             	mov    -0x44(%rbp),%edx
  401399:	c1 ea 06             	shr    $0x6,%edx
  40139c:	83 e2 07             	and    $0x7,%edx
  40139f:	8b 00                	mov    (%rax),%eax
  4013a1:	89 d2                	mov    %edx,%edx
  4013a3:	89 44 95 80          	mov    %eax,-0x80(%rbp,%rdx,4)
  4013a7:	e9 51 02 00 00       	jmpq   4015fd <runProgram+0x4c7>
  4013ac:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4013af:	83 e0 07             	and    $0x7,%eax
  4013b2:	89 c1                	mov    %eax,%ecx
  4013b4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4013bb:	48 8b 10             	mov    (%rax),%rdx
  4013be:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4013c1:	c1 e8 06             	shr    $0x6,%eax
  4013c4:	83 e0 07             	and    $0x7,%eax
  4013c7:	89 c0                	mov    %eax,%eax
  4013c9:	8b 44 85 80          	mov    -0x80(%rbp,%rax,4),%eax
  4013cd:	89 c0                	mov    %eax,%eax
  4013cf:	48 c1 e0 04          	shl    $0x4,%rax
  4013d3:	48 01 d0             	add    %rdx,%rax
  4013d6:	48 8b 10             	mov    (%rax),%rdx
  4013d9:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4013dc:	c1 e8 03             	shr    $0x3,%eax
  4013df:	83 e0 07             	and    $0x7,%eax
  4013e2:	89 c0                	mov    %eax,%eax
  4013e4:	8b 44 85 80          	mov    -0x80(%rbp,%rax,4),%eax
  4013e8:	89 c0                	mov    %eax,%eax
  4013ea:	48 c1 e0 02          	shl    $0x2,%rax
  4013ee:	48 01 c2             	add    %rax,%rdx
  4013f1:	89 c8                	mov    %ecx,%eax
  4013f3:	8b 44 85 80          	mov    -0x80(%rbp,%rax,4),%eax
  4013f7:	89 02                	mov    %eax,(%rdx)
  4013f9:	e9 ff 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  4013fe:	8b 55 bc             	mov    -0x44(%rbp),%edx
  401401:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  401405:	89 d6                	mov    %edx,%esi
  401407:	48 89 c7             	mov    %rax,%rdi
  40140a:	e8 0c 03 00 00       	callq  40171b <CPU_add>
  40140f:	e9 e9 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  401414:	8b 55 bc             	mov    -0x44(%rbp),%edx
  401417:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  40141b:	89 d6                	mov    %edx,%esi
  40141d:	48 89 c7             	mov    %rax,%rdi
  401420:	e8 63 03 00 00       	callq  401788 <CPU_mult>
  401425:	e9 d3 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  40142a:	8b 55 bc             	mov    -0x44(%rbp),%edx
  40142d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  401431:	89 d6                	mov    %edx,%esi
  401433:	48 89 c7             	mov    %rax,%rdi
  401436:	e8 bb 03 00 00       	callq  4017f6 <CPU_div>
  40143b:	e9 bd 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  401440:	8b 55 bc             	mov    -0x44(%rbp),%edx
  401443:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  401447:	89 d6                	mov    %edx,%esi
  401449:	48 89 c7             	mov    %rax,%rdi
  40144c:	e8 17 04 00 00       	callq  401868 <CPU_nand>
  401451:	e9 a7 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  401456:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  40145d:	8b 55 bc             	mov    -0x44(%rbp),%edx
  401460:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  401464:	48 89 ce             	mov    %rcx,%rsi
  401467:	48 89 c7             	mov    %rax,%rdi
  40146a:	e8 68 04 00 00       	callq  4018d7 <CPU_mapSeg>
  40146f:	e9 89 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  401474:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
  40147b:	8b 55 bc             	mov    -0x44(%rbp),%edx
  40147e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  401482:	48 89 ce             	mov    %rcx,%rsi
  401485:	48 89 c7             	mov    %rax,%rdi
  401488:	e8 b1 04 00 00       	callq  40193e <CPU_unmapSeg>
  40148d:	e9 6b 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  401492:	8b 55 bc             	mov    -0x44(%rbp),%edx
  401495:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
  40149c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  4014a0:	48 89 ce             	mov    %rcx,%rsi
  4014a3:	48 89 c7             	mov    %rax,%rdi
  4014a6:	e8 d4 04 00 00       	callq  40197f <CPU_printOut>
  4014ab:	e9 4d 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  4014b0:	8b 55 bc             	mov    -0x44(%rbp),%edx
  4014b3:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  4014ba:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  4014be:	48 89 ce             	mov    %rcx,%rsi
  4014c1:	48 89 c7             	mov    %rax,%rdi
  4014c4:	e8 fe 04 00 00       	callq  4019c7 <CPU_readIn>
  4014c9:	e9 2f 01 00 00       	jmpq   4015fd <runProgram+0x4c7>
  4014ce:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4014d1:	c1 e8 03             	shr    $0x3,%eax
  4014d4:	83 e0 07             	and    $0x7,%eax
  4014d7:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  4014da:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4014dd:	83 e0 07             	and    $0x7,%eax
  4014e0:	89 c0                	mov    %eax,%eax
  4014e2:	8b 44 85 80          	mov    -0x80(%rbp,%rax,4),%eax
  4014e6:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4014e9:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  4014ec:	8b 44 85 80          	mov    -0x80(%rbp,%rax,4),%eax
  4014f0:	85 c0                	test   %eax,%eax
  4014f2:	0f 84 05 01 00 00    	je     4015fd <runProgram+0x4c7>
  4014f8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4014ff:	48 8b 10             	mov    (%rax),%rdx
  401502:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  401505:	8b 44 85 80          	mov    -0x80(%rbp,%rax,4),%eax
  401509:	89 c0                	mov    %eax,%eax
  40150b:	48 c1 e0 04          	shl    $0x4,%rax
  40150f:	48 01 d0             	add    %rdx,%rax
  401512:	48 8b 50 08          	mov    0x8(%rax),%rdx
  401516:	48 8b 00             	mov    (%rax),%rax
  401519:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  401520:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
  401527:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40152e:	48 8b 00             	mov    (%rax),%rax
  401531:	48 8b 00             	mov    (%rax),%rax
  401534:	ba 8f 01 00 00       	mov    $0x18f,%edx
  401539:	be 38 1f 40 00       	mov    $0x401f38,%esi
  40153e:	48 89 c7             	mov    %rax,%rdi
  401541:	e8 49 06 00 00       	callq  401b8f <Mem_free>
  401546:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40154d:	48 8b 00             	mov    (%rax),%rax
  401550:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  401557:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
  40155d:	89 c7                	mov    %eax,%edi
  40155f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  401566:	48 8b 18             	mov    (%rax),%rbx
  401569:	b9 91 01 00 00       	mov    $0x191,%ecx
  40156e:	ba 38 1f 40 00       	mov    $0x401f38,%edx
  401573:	be 04 00 00 00       	mov    $0x4,%esi
  401578:	e8 56 05 00 00       	callq  401ad3 <Mem_calloc>
  40157d:	48 89 03             	mov    %rax,(%rbx)
  401580:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  401587:	48 8b 00             	mov    (%rax),%rax
  40158a:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
  401590:	89 50 08             	mov    %edx,0x8(%rax)
  401593:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
  40159a:	eb 31                	jmp    4015cd <runProgram+0x497>
  40159c:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  4015a3:	8b 45 c0             	mov    -0x40(%rbp),%eax
  4015a6:	48 c1 e0 02          	shl    $0x2,%rax
  4015aa:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  4015ae:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4015b5:	48 8b 00             	mov    (%rax),%rax
  4015b8:	48 8b 10             	mov    (%rax),%rdx
  4015bb:	8b 45 c0             	mov    -0x40(%rbp),%eax
  4015be:	48 c1 e0 02          	shl    $0x2,%rax
  4015c2:	48 01 c2             	add    %rax,%rdx
  4015c5:	8b 01                	mov    (%rcx),%eax
  4015c7:	89 02                	mov    %eax,(%rdx)
  4015c9:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
  4015cd:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
  4015d3:	39 45 c0             	cmp    %eax,-0x40(%rbp)
  4015d6:	72 c4                	jb     40159c <runProgram+0x466>
  4015d8:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
  4015de:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4015e1:	eb 1a                	jmp    4015fd <runProgram+0x4c7>
  4015e3:	8b 55 bc             	mov    -0x44(%rbp),%edx
  4015e6:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  4015ea:	89 d6                	mov    %edx,%esi
  4015ec:	48 89 c7             	mov    %rax,%rdi
  4015ef:	e8 12 04 00 00       	callq  401a06 <CPU_loadValue>
  4015f4:	eb 07                	jmp    4015fd <runProgram+0x4c7>
  4015f6:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4015f9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4015fc:	90                   	nop
  4015fd:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401600:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  401603:	0f 82 fd fc ff ff    	jb     401306 <runProgram+0x1d0>
  401609:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
  401610:	48 89 c7             	mov    %rax,%rdi
  401613:	e8 f9 f7 ff ff       	callq  400e11 <Mem_freeMemory>
  401618:	90                   	nop
  401619:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  40161d:	c9                   	leaveq 
  40161e:	c3                   	retq   

000000000040161f <CPU_new>:
  40161f:	55                   	push   %rbp
  401620:	48 89 e5             	mov    %rsp,%rbp
  401623:	48 83 ec 20          	sub    $0x20,%rsp
  401627:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40162b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40162f:	ba b5 01 00 00       	mov    $0x1b5,%edx
  401634:	be 38 1f 40 00       	mov    $0x401f38,%esi
  401639:	bf 40 00 00 00       	mov    $0x40,%edi
  40163e:	e8 01 04 00 00       	callq  401a44 <Mem_alloc>
  401643:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401647:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40164b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40164f:	48 89 10             	mov    %rdx,(%rax)
  401652:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401656:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40165a:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40165e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401665:	eb 19                	jmp    401680 <CPU_new+0x61>
  401667:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40166b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40166e:	48 63 d2             	movslq %edx,%rdx
  401671:	48 83 c2 04          	add    $0x4,%rdx
  401675:	c7 04 90 00 00 00 00 	movl   $0x0,(%rax,%rdx,4)
  40167c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  401680:	83 7d fc 07          	cmpl   $0x7,-0x4(%rbp)
  401684:	7e e1                	jle    401667 <CPU_new+0x48>
  401686:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40168a:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
  401691:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401695:	c6 40 34 01          	movb   $0x1,0x34(%rax)
  401699:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40169d:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
  4016a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4016a8:	c9                   	leaveq 
  4016a9:	c3                   	retq   

00000000004016aa <CPU_cmove>:
  4016aa:	55                   	push   %rbp
  4016ab:	48 89 e5             	mov    %rsp,%rbp
  4016ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4016b2:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4016b5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4016b8:	c1 e8 06             	shr    $0x6,%eax
  4016bb:	83 e0 07             	and    $0x7,%eax
  4016be:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4016c1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4016c4:	c1 e8 03             	shr    $0x3,%eax
  4016c7:	83 e0 07             	and    $0x7,%eax
  4016ca:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4016cd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4016d0:	83 e0 07             	and    $0x7,%eax
  4016d3:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4016d6:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4016d9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4016e0:	00 
  4016e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4016e5:	48 01 d0             	add    %rdx,%rax
  4016e8:	8b 00                	mov    (%rax),%eax
  4016ea:	85 c0                	test   %eax,%eax
  4016ec:	74 2a                	je     401718 <CPU_cmove+0x6e>
  4016ee:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4016f1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4016f8:	00 
  4016f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4016fd:	48 01 d0             	add    %rdx,%rax
  401700:	8b 55 fc             	mov    -0x4(%rbp),%edx
  401703:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
  40170a:	00 
  40170b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40170f:	48 01 ca             	add    %rcx,%rdx
  401712:	8b 00                	mov    (%rax),%eax
  401714:	89 02                	mov    %eax,(%rdx)
  401716:	eb 01                	jmp    401719 <CPU_cmove+0x6f>
  401718:	90                   	nop
  401719:	5d                   	pop    %rbp
  40171a:	c3                   	retq   

000000000040171b <CPU_add>:
  40171b:	55                   	push   %rbp
  40171c:	48 89 e5             	mov    %rsp,%rbp
  40171f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401723:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401726:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401729:	c1 e8 06             	shr    $0x6,%eax
  40172c:	83 e0 07             	and    $0x7,%eax
  40172f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  401732:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401735:	c1 e8 03             	shr    $0x3,%eax
  401738:	83 e0 07             	and    $0x7,%eax
  40173b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40173e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401741:	83 e0 07             	and    $0x7,%eax
  401744:	89 45 f4             	mov    %eax,-0xc(%rbp)
  401747:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40174a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  401751:	00 
  401752:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401756:	48 01 d0             	add    %rdx,%rax
  401759:	8b 08                	mov    (%rax),%ecx
  40175b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40175e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  401765:	00 
  401766:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40176a:	48 01 d0             	add    %rdx,%rax
  40176d:	8b 10                	mov    (%rax),%edx
  40176f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401772:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
  401779:	00 
  40177a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40177e:	48 01 f0             	add    %rsi,%rax
  401781:	01 ca                	add    %ecx,%edx
  401783:	89 10                	mov    %edx,(%rax)
  401785:	90                   	nop
  401786:	5d                   	pop    %rbp
  401787:	c3                   	retq   

0000000000401788 <CPU_mult>:
  401788:	55                   	push   %rbp
  401789:	48 89 e5             	mov    %rsp,%rbp
  40178c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401790:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401793:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401796:	c1 e8 06             	shr    $0x6,%eax
  401799:	83 e0 07             	and    $0x7,%eax
  40179c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40179f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4017a2:	c1 e8 03             	shr    $0x3,%eax
  4017a5:	83 e0 07             	and    $0x7,%eax
  4017a8:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4017ab:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4017ae:	83 e0 07             	and    $0x7,%eax
  4017b1:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4017b4:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4017b7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4017be:	00 
  4017bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4017c3:	48 01 d0             	add    %rdx,%rax
  4017c6:	8b 08                	mov    (%rax),%ecx
  4017c8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4017cb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4017d2:	00 
  4017d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4017d7:	48 01 d0             	add    %rdx,%rax
  4017da:	8b 00                	mov    (%rax),%eax
  4017dc:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4017df:	48 8d 34 95 00 00 00 	lea    0x0(,%rdx,4),%rsi
  4017e6:	00 
  4017e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4017eb:	48 01 f2             	add    %rsi,%rdx
  4017ee:	0f af c1             	imul   %ecx,%eax
  4017f1:	89 02                	mov    %eax,(%rdx)
  4017f3:	90                   	nop
  4017f4:	5d                   	pop    %rbp
  4017f5:	c3                   	retq   

00000000004017f6 <CPU_div>:
  4017f6:	55                   	push   %rbp
  4017f7:	48 89 e5             	mov    %rsp,%rbp
  4017fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4017fe:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401801:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401804:	c1 e8 06             	shr    $0x6,%eax
  401807:	83 e0 07             	and    $0x7,%eax
  40180a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40180d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401810:	c1 e8 03             	shr    $0x3,%eax
  401813:	83 e0 07             	and    $0x7,%eax
  401816:	89 45 f8             	mov    %eax,-0x8(%rbp)
  401819:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40181c:	83 e0 07             	and    $0x7,%eax
  40181f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  401822:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401825:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  40182c:	00 
  40182d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401831:	48 01 d0             	add    %rdx,%rax
  401834:	8b 00                	mov    (%rax),%eax
  401836:	8b 55 f4             	mov    -0xc(%rbp),%edx
  401839:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
  401840:	00 
  401841:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401845:	48 01 ca             	add    %rcx,%rdx
  401848:	8b 3a                	mov    (%rdx),%edi
  40184a:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40184d:	48 8d 34 8d 00 00 00 	lea    0x0(,%rcx,4),%rsi
  401854:	00 
  401855:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401859:	48 01 f1             	add    %rsi,%rcx
  40185c:	ba 00 00 00 00       	mov    $0x0,%edx
  401861:	f7 f7                	div    %edi
  401863:	89 01                	mov    %eax,(%rcx)
  401865:	90                   	nop
  401866:	5d                   	pop    %rbp
  401867:	c3                   	retq   

0000000000401868 <CPU_nand>:
  401868:	55                   	push   %rbp
  401869:	48 89 e5             	mov    %rsp,%rbp
  40186c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401870:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401873:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401876:	c1 e8 06             	shr    $0x6,%eax
  401879:	83 e0 07             	and    $0x7,%eax
  40187c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40187f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401882:	c1 e8 03             	shr    $0x3,%eax
  401885:	83 e0 07             	and    $0x7,%eax
  401888:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40188b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40188e:	83 e0 07             	and    $0x7,%eax
  401891:	89 45 f4             	mov    %eax,-0xc(%rbp)
  401894:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401897:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  40189e:	00 
  40189f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4018a3:	48 01 d0             	add    %rdx,%rax
  4018a6:	8b 10                	mov    (%rax),%edx
  4018a8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4018ab:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  4018b2:	00 
  4018b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4018b7:	48 01 c8             	add    %rcx,%rax
  4018ba:	8b 00                	mov    (%rax),%eax
  4018bc:	21 c2                	and    %eax,%edx
  4018be:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4018c1:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  4018c8:	00 
  4018c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4018cd:	48 01 c8             	add    %rcx,%rax
  4018d0:	f7 d2                	not    %edx
  4018d2:	89 10                	mov    %edx,(%rax)
  4018d4:	90                   	nop
  4018d5:	5d                   	pop    %rbp
  4018d6:	c3                   	retq   

00000000004018d7 <CPU_mapSeg>:
  4018d7:	55                   	push   %rbp
  4018d8:	48 89 e5             	mov    %rsp,%rbp
  4018db:	53                   	push   %rbx
  4018dc:	48 83 ec 38          	sub    $0x38,%rsp
  4018e0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4018e4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4018e8:	89 55 cc             	mov    %edx,-0x34(%rbp)
  4018eb:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4018ee:	c1 e8 03             	shr    $0x3,%eax
  4018f1:	83 e0 07             	and    $0x7,%eax
  4018f4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4018f7:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4018fa:	83 e0 07             	and    $0x7,%eax
  4018fd:	89 45 e8             	mov    %eax,-0x18(%rbp)
  401900:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401903:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  40190a:	00 
  40190b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40190f:	48 01 d0             	add    %rdx,%rax
  401912:	8b 10                	mov    (%rax),%edx
  401914:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401917:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  40191e:	00 
  40191f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401923:	48 8d 1c 01          	lea    (%rcx,%rax,1),%rbx
  401927:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40192b:	89 d6                	mov    %edx,%esi
  40192d:	48 89 c7             	mov    %rax,%rdi
  401930:	e8 e8 f5 ff ff       	callq  400f1d <Mem_mapNew>
  401935:	89 03                	mov    %eax,(%rbx)
  401937:	90                   	nop
  401938:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  40193c:	c9                   	leaveq 
  40193d:	c3                   	retq   

000000000040193e <CPU_unmapSeg>:
  40193e:	55                   	push   %rbp
  40193f:	48 89 e5             	mov    %rsp,%rbp
  401942:	48 83 ec 30          	sub    $0x30,%rsp
  401946:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40194a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40194e:	89 55 dc             	mov    %edx,-0x24(%rbp)
  401951:	8b 45 dc             	mov    -0x24(%rbp),%eax
  401954:	83 e0 07             	and    $0x7,%eax
  401957:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40195a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40195d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  401964:	00 
  401965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401969:	48 01 d0             	add    %rdx,%rax
  40196c:	8b 10                	mov    (%rax),%edx
  40196e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401972:	89 d6                	mov    %edx,%esi
  401974:	48 89 c7             	mov    %rax,%rdi
  401977:	e8 20 f7 ff ff       	callq  40109c <Mem_mapFree>
  40197c:	90                   	nop
  40197d:	c9                   	leaveq 
  40197e:	c3                   	retq   

000000000040197f <CPU_printOut>:
  40197f:	55                   	push   %rbp
  401980:	48 89 e5             	mov    %rsp,%rbp
  401983:	48 83 ec 30          	sub    $0x30,%rsp
  401987:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40198b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40198f:	89 55 dc             	mov    %edx,-0x24(%rbp)
  401992:	8b 45 dc             	mov    -0x24(%rbp),%eax
  401995:	83 e0 07             	and    $0x7,%eax
  401998:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40199b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40199e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4019a5:	00 
  4019a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4019aa:	48 01 d0             	add    %rdx,%rax
  4019ad:	8b 00                	mov    (%rax),%eax
  4019af:	88 45 fb             	mov    %al,-0x5(%rbp)
  4019b2:	0f be 45 fb          	movsbl -0x5(%rbp),%eax
  4019b6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4019ba:	48 89 d6             	mov    %rdx,%rsi
  4019bd:	89 c7                	mov    %eax,%edi
  4019bf:	e8 bc ef ff ff       	callq  400980 <fputc@plt>
  4019c4:	90                   	nop
  4019c5:	c9                   	leaveq 
  4019c6:	c3                   	retq   

00000000004019c7 <CPU_readIn>:
  4019c7:	55                   	push   %rbp
  4019c8:	48 89 e5             	mov    %rsp,%rbp
  4019cb:	48 83 ec 30          	sub    $0x30,%rsp
  4019cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4019d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4019d7:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4019da:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4019dd:	83 e0 07             	and    $0x7,%eax
  4019e0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4019e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4019e7:	48 89 c7             	mov    %rax,%rdi
  4019ea:	e8 81 ef ff ff       	callq  400970 <fgetc@plt>
  4019ef:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4019f2:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
  4019f9:	00 
  4019fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4019fe:	48 01 ca             	add    %rcx,%rdx
  401a01:	89 02                	mov    %eax,(%rdx)
  401a03:	90                   	nop
  401a04:	c9                   	leaveq 
  401a05:	c3                   	retq   

0000000000401a06 <CPU_loadValue>:
  401a06:	55                   	push   %rbp
  401a07:	48 89 e5             	mov    %rsp,%rbp
  401a0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401a0e:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401a11:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401a14:	c1 e8 19             	shr    $0x19,%eax
  401a17:	83 e0 07             	and    $0x7,%eax
  401a1a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  401a1d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401a20:	25 ff ff ff 01       	and    $0x1ffffff,%eax
  401a25:	89 45 f8             	mov    %eax,-0x8(%rbp)
  401a28:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401a2b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  401a32:	00 
  401a33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401a37:	48 01 c2             	add    %rax,%rdx
  401a3a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401a3d:	89 02                	mov    %eax,(%rdx)
  401a3f:	90                   	nop
  401a40:	5d                   	pop    %rbp
  401a41:	c3                   	retq   
  401a42:	66 90                	xchg   %ax,%ax

0000000000401a44 <Mem_alloc>:
  401a44:	55                   	push   %rbp
  401a45:	48 89 e5             	mov    %rsp,%rbp
  401a48:	48 83 ec 30          	sub    $0x30,%rsp
  401a4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401a50:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  401a54:	89 55 dc             	mov    %edx,-0x24(%rbp)
  401a57:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401a5c:	7f 1b                	jg     401a79 <Mem_alloc+0x35>
  401a5e:	ba 0a 00 00 00       	mov    $0xa,%edx
  401a63:	48 8d 35 58 05 00 00 	lea    0x558(%rip),%rsi        # 401fc2 <_IO_stdin_used+0xea>
  401a6a:	48 8d 05 4f 13 20 00 	lea    0x20134f(%rip),%rax        # 602dc0 <Assert_Failed>
  401a71:	48 89 c7             	mov    %rax,%rdi
  401a74:	e8 2b 02 00 00       	callq  401ca4 <Except_raise>
  401a79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401a7d:	48 89 c7             	mov    %rax,%rdi
  401a80:	e8 3b ef ff ff       	callq  4009c0 <malloc@plt>
  401a85:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401a89:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401a8e:	75 3d                	jne    401acd <Mem_alloc+0x89>
  401a90:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  401a95:	75 1d                	jne    401ab4 <Mem_alloc+0x70>
  401a97:	ba 0f 00 00 00       	mov    $0xf,%edx
  401a9c:	48 8d 35 1f 05 00 00 	lea    0x51f(%rip),%rsi        # 401fc2 <_IO_stdin_used+0xea>
  401aa3:	48 8d 05 0e 13 20 00 	lea    0x20130e(%rip),%rax        # 602db8 <Mem_Failed>
  401aaa:	48 89 c7             	mov    %rax,%rdi
  401aad:	e8 f2 01 00 00       	callq  401ca4 <Except_raise>
  401ab2:	eb 19                	jmp    401acd <Mem_alloc+0x89>
  401ab4:	8b 55 dc             	mov    -0x24(%rbp),%edx
  401ab7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401abb:	48 89 c6             	mov    %rax,%rsi
  401abe:	48 8d 05 f3 12 20 00 	lea    0x2012f3(%rip),%rax        # 602db8 <Mem_Failed>
  401ac5:	48 89 c7             	mov    %rax,%rdi
  401ac8:	e8 d7 01 00 00       	callq  401ca4 <Except_raise>
  401acd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401ad1:	c9                   	leaveq 
  401ad2:	c3                   	retq   

0000000000401ad3 <Mem_calloc>:
  401ad3:	55                   	push   %rbp
  401ad4:	48 89 e5             	mov    %rsp,%rbp
  401ad7:	48 83 ec 30          	sub    $0x30,%rsp
  401adb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401adf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  401ae3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  401ae7:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  401aea:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401aef:	7f 1b                	jg     401b0c <Mem_calloc+0x39>
  401af1:	ba 18 00 00 00       	mov    $0x18,%edx
  401af6:	48 8d 35 c5 04 00 00 	lea    0x4c5(%rip),%rsi        # 401fc2 <_IO_stdin_used+0xea>
  401afd:	48 8d 05 bc 12 20 00 	lea    0x2012bc(%rip),%rax        # 602dc0 <Assert_Failed>
  401b04:	48 89 c7             	mov    %rax,%rdi
  401b07:	e8 98 01 00 00       	callq  401ca4 <Except_raise>
  401b0c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  401b11:	7f 1b                	jg     401b2e <Mem_calloc+0x5b>
  401b13:	ba 19 00 00 00       	mov    $0x19,%edx
  401b18:	48 8d 35 a3 04 00 00 	lea    0x4a3(%rip),%rsi        # 401fc2 <_IO_stdin_used+0xea>
  401b1f:	48 8d 05 9a 12 20 00 	lea    0x20129a(%rip),%rax        # 602dc0 <Assert_Failed>
  401b26:	48 89 c7             	mov    %rax,%rdi
  401b29:	e8 76 01 00 00       	callq  401ca4 <Except_raise>
  401b2e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401b32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401b36:	48 89 d6             	mov    %rdx,%rsi
  401b39:	48 89 c7             	mov    %rax,%rdi
  401b3c:	e8 4f ee ff ff       	callq  400990 <calloc@plt>
  401b41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401b45:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401b4a:	75 3d                	jne    401b89 <Mem_calloc+0xb6>
  401b4c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  401b51:	75 1d                	jne    401b70 <Mem_calloc+0x9d>
  401b53:	ba 1e 00 00 00       	mov    $0x1e,%edx
  401b58:	48 8d 35 63 04 00 00 	lea    0x463(%rip),%rsi        # 401fc2 <_IO_stdin_used+0xea>
  401b5f:	48 8d 05 52 12 20 00 	lea    0x201252(%rip),%rax        # 602db8 <Mem_Failed>
  401b66:	48 89 c7             	mov    %rax,%rdi
  401b69:	e8 36 01 00 00       	callq  401ca4 <Except_raise>
  401b6e:	eb 19                	jmp    401b89 <Mem_calloc+0xb6>
  401b70:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  401b73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401b77:	48 89 c6             	mov    %rax,%rsi
  401b7a:	48 8d 05 37 12 20 00 	lea    0x201237(%rip),%rax        # 602db8 <Mem_Failed>
  401b81:	48 89 c7             	mov    %rax,%rdi
  401b84:	e8 1b 01 00 00       	callq  401ca4 <Except_raise>
  401b89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b8d:	c9                   	leaveq 
  401b8e:	c3                   	retq   

0000000000401b8f <Mem_free>:
  401b8f:	55                   	push   %rbp
  401b90:	48 89 e5             	mov    %rsp,%rbp
  401b93:	48 83 ec 20          	sub    $0x20,%rsp
  401b97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401b9f:	89 55 ec             	mov    %edx,-0x14(%rbp)
  401ba2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401ba7:	74 0c                	je     401bb5 <Mem_free+0x26>
  401ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401bad:	48 89 c7             	mov    %rax,%rdi
  401bb0:	e8 8b ed ff ff       	callq  400940 <free@plt>
  401bb5:	c9                   	leaveq 
  401bb6:	c3                   	retq   

0000000000401bb7 <Mem_resize>:
  401bb7:	55                   	push   %rbp
  401bb8:	48 89 e5             	mov    %rsp,%rbp
  401bbb:	48 83 ec 20          	sub    $0x20,%rsp
  401bbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401bc3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401bc7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  401bcb:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  401bce:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401bd3:	75 1b                	jne    401bf0 <Mem_resize+0x39>
  401bd5:	ba 2a 00 00 00       	mov    $0x2a,%edx
  401bda:	48 8d 35 e1 03 00 00 	lea    0x3e1(%rip),%rsi        # 401fc2 <_IO_stdin_used+0xea>
  401be1:	48 8d 05 d8 11 20 00 	lea    0x2011d8(%rip),%rax        # 602dc0 <Assert_Failed>
  401be8:	48 89 c7             	mov    %rax,%rdi
  401beb:	e8 b4 00 00 00       	callq  401ca4 <Except_raise>
  401bf0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  401bf5:	7f 1b                	jg     401c12 <Mem_resize+0x5b>
  401bf7:	ba 2b 00 00 00       	mov    $0x2b,%edx
  401bfc:	48 8d 35 bf 03 00 00 	lea    0x3bf(%rip),%rsi        # 401fc2 <_IO_stdin_used+0xea>
  401c03:	48 8d 05 b6 11 20 00 	lea    0x2011b6(%rip),%rax        # 602dc0 <Assert_Failed>
  401c0a:	48 89 c7             	mov    %rax,%rdi
  401c0d:	e8 92 00 00 00       	callq  401ca4 <Except_raise>
  401c12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  401c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c1a:	48 89 d6             	mov    %rdx,%rsi
  401c1d:	48 89 c7             	mov    %rax,%rdi
  401c20:	e8 bb ed ff ff       	callq  4009e0 <realloc@plt>
  401c25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401c29:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401c2e:	75 3d                	jne    401c6d <Mem_resize+0xb6>
  401c30:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401c35:	75 1d                	jne    401c54 <Mem_resize+0x9d>
  401c37:	ba 30 00 00 00       	mov    $0x30,%edx
  401c3c:	48 8d 35 7f 03 00 00 	lea    0x37f(%rip),%rsi        # 401fc2 <_IO_stdin_used+0xea>
  401c43:	48 8d 05 6e 11 20 00 	lea    0x20116e(%rip),%rax        # 602db8 <Mem_Failed>
  401c4a:	48 89 c7             	mov    %rax,%rdi
  401c4d:	e8 52 00 00 00       	callq  401ca4 <Except_raise>
  401c52:	eb 19                	jmp    401c6d <Mem_resize+0xb6>
  401c54:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  401c57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401c5b:	48 89 c6             	mov    %rax,%rsi
  401c5e:	48 8d 05 53 11 20 00 	lea    0x201153(%rip),%rax        # 602db8 <Mem_Failed>
  401c65:	48 89 c7             	mov    %rax,%rdi
  401c68:	e8 37 00 00 00       	callq  401ca4 <Except_raise>
  401c6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c71:	c9                   	leaveq 
  401c72:	c3                   	retq   
  401c73:	90                   	nop

0000000000401c74 <assert>:
  401c74:	55                   	push   %rbp
  401c75:	48 89 e5             	mov    %rsp,%rbp
  401c78:	48 83 ec 10          	sub    $0x10,%rsp
  401c7c:	89 7d fc             	mov    %edi,-0x4(%rbp)
  401c7f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  401c83:	75 1b                	jne    401ca0 <assert+0x2c>
  401c85:	ba 05 00 00 00       	mov    $0x5,%edx
  401c8a:	48 8d 35 4c 03 00 00 	lea    0x34c(%rip),%rsi        # 401fdd <_IO_stdin_used+0x105>
  401c91:	48 8d 05 28 11 20 00 	lea    0x201128(%rip),%rax        # 602dc0 <Assert_Failed>
  401c98:	48 89 c7             	mov    %rax,%rdi
  401c9b:	e8 04 00 00 00       	callq  401ca4 <Except_raise>
  401ca0:	c9                   	leaveq 
  401ca1:	c3                   	retq   
  401ca2:	66 90                	xchg   %ax,%ax

0000000000401ca4 <Except_raise>:
  401ca4:	55                   	push   %rbp
  401ca5:	48 89 e5             	mov    %rsp,%rbp
  401ca8:	53                   	push   %rbx
  401ca9:	48 83 ec 38          	sub    $0x38,%rsp
  401cad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401cb1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  401cb5:	89 55 cc             	mov    %edx,-0x34(%rbp)
  401cb8:	48 8d 05 31 14 20 00 	lea    0x201431(%rip),%rax        # 6030f0 <Except_stack>
  401cbf:	48 8b 00             	mov    (%rax),%rax
  401cc2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401cc6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  401ccb:	75 1b                	jne    401ce8 <Except_raise+0x44>
  401ccd:	ba 13 00 00 00       	mov    $0x13,%edx
  401cd2:	48 8d 35 11 03 00 00 	lea    0x311(%rip),%rsi        # 401fea <_IO_stdin_used+0x112>
  401cd9:	48 8d 05 e0 10 20 00 	lea    0x2010e0(%rip),%rax        # 602dc0 <Assert_Failed>
  401ce0:	48 89 c7             	mov    %rax,%rdi
  401ce3:	e8 bc ff ff ff       	callq  401ca4 <Except_raise>
  401ce8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401ced:	0f 85 f9 00 00 00    	jne    401dec <Except_raise+0x148>
  401cf3:	48 8b 05 fe 12 20 00 	mov    0x2012fe(%rip),%rax        # 602ff8 <stderr@@GLIBC_2.2.5-0xe8>
  401cfa:	48 8b 00             	mov    (%rax),%rax
  401cfd:	48 89 c2             	mov    %rax,%rdx
  401d00:	48 8d 05 f0 02 00 00 	lea    0x2f0(%rip),%rax        # 401ff7 <_IO_stdin_used+0x11f>
  401d07:	48 89 d1             	mov    %rdx,%rcx
  401d0a:	ba 12 00 00 00       	mov    $0x12,%edx
  401d0f:	be 01 00 00 00       	mov    $0x1,%esi
  401d14:	48 89 c7             	mov    %rax,%rdi
  401d17:	e8 04 ed ff ff       	callq  400a20 <fwrite@plt>
  401d1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401d20:	48 8b 00             	mov    (%rax),%rax
  401d23:	48 85 c0             	test   %rax,%rax
  401d26:	74 2a                	je     401d52 <Except_raise+0xae>
  401d28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401d2c:	48 8b 10             	mov    (%rax),%rdx
  401d2f:	48 8d 0d d4 02 00 00 	lea    0x2d4(%rip),%rcx        # 40200a <_IO_stdin_used+0x132>
  401d36:	48 8b 05 bb 12 20 00 	mov    0x2012bb(%rip),%rax        # 602ff8 <stderr@@GLIBC_2.2.5-0xe8>
  401d3d:	48 8b 00             	mov    (%rax),%rax
  401d40:	48 89 ce             	mov    %rcx,%rsi
  401d43:	48 89 c7             	mov    %rax,%rdi
  401d46:	b8 00 00 00 00       	mov    $0x0,%eax
  401d4b:	e8 50 ec ff ff       	callq  4009a0 <fprintf@plt>
  401d50:	eb 25                	jmp    401d77 <Except_raise+0xd3>
  401d52:	48 8d 0d b5 02 00 00 	lea    0x2b5(%rip),%rcx        # 40200e <_IO_stdin_used+0x136>
  401d59:	48 8b 05 98 12 20 00 	mov    0x201298(%rip),%rax        # 602ff8 <stderr@@GLIBC_2.2.5-0xe8>
  401d60:	48 8b 00             	mov    (%rax),%rax
  401d63:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  401d67:	48 89 ce             	mov    %rcx,%rsi
  401d6a:	48 89 c7             	mov    %rax,%rdi
  401d6d:	b8 00 00 00 00       	mov    $0x0,%eax
  401d72:	e8 29 ec ff ff       	callq  4009a0 <fprintf@plt>
  401d77:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  401d7c:	74 2e                	je     401dac <Except_raise+0x108>
  401d7e:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  401d82:	7e 28                	jle    401dac <Except_raise+0x108>
  401d84:	48 8d 1d 8c 02 00 00 	lea    0x28c(%rip),%rbx        # 402017 <_IO_stdin_used+0x13f>
  401d8b:	48 8b 05 66 12 20 00 	mov    0x201266(%rip),%rax        # 602ff8 <stderr@@GLIBC_2.2.5-0xe8>
  401d92:	48 8b 00             	mov    (%rax),%rax
  401d95:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  401d98:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401d9c:	48 89 de             	mov    %rbx,%rsi
  401d9f:	48 89 c7             	mov    %rax,%rdi
  401da2:	b8 00 00 00 00       	mov    $0x0,%eax
  401da7:	e8 f4 eb ff ff       	callq  4009a0 <fprintf@plt>
  401dac:	48 8b 05 45 12 20 00 	mov    0x201245(%rip),%rax        # 602ff8 <stderr@@GLIBC_2.2.5-0xe8>
  401db3:	48 8b 00             	mov    (%rax),%rax
  401db6:	48 89 c2             	mov    %rax,%rdx
  401db9:	48 8d 05 69 02 00 00 	lea    0x269(%rip),%rax        # 402029 <_IO_stdin_used+0x151>
  401dc0:	48 89 d1             	mov    %rdx,%rcx
  401dc3:	ba 0c 00 00 00       	mov    $0xc,%edx
  401dc8:	be 01 00 00 00       	mov    $0x1,%esi
  401dcd:	48 89 c7             	mov    %rax,%rdi
  401dd0:	e8 4b ec ff ff       	callq  400a20 <fwrite@plt>
  401dd5:	48 8b 05 1c 12 20 00 	mov    0x20121c(%rip),%rax        # 602ff8 <stderr@@GLIBC_2.2.5-0xe8>
  401ddc:	48 8b 00             	mov    (%rax),%rax
  401ddf:	48 89 c7             	mov    %rax,%rdi
  401de2:	e8 e9 eb ff ff       	callq  4009d0 <fflush@plt>
  401de7:	e8 64 eb ff ff       	callq  400950 <abort@plt>
  401dec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401df0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  401df4:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)
  401dfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401dff:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401e03:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
  401e0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e0e:	8b 55 cc             	mov    -0x34(%rbp),%edx
  401e11:	89 90 d8 00 00 00    	mov    %edx,0xd8(%rax)
  401e17:	48 8d 05 d2 12 20 00 	lea    0x2012d2(%rip),%rax        # 6030f0 <Except_stack>
  401e1e:	48 8b 00             	mov    (%rax),%rax
  401e21:	48 8b 10             	mov    (%rax),%rdx
  401e24:	48 8d 05 c5 12 20 00 	lea    0x2012c5(%rip),%rax        # 6030f0 <Except_stack>
  401e2b:	48 89 10             	mov    %rdx,(%rax)
  401e2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e32:	48 83 c0 08          	add    $0x8,%rax
  401e36:	be 01 00 00 00       	mov    $0x1,%esi
  401e3b:	48 89 c7             	mov    %rax,%rdi
  401e3e:	e8 ad eb ff ff       	callq  4009f0 <longjmp@plt>
  401e43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401e4a:	00 00 00 
  401e4d:	0f 1f 00             	nopl   (%rax)

0000000000401e50 <__libc_csu_init>:
  401e50:	f3 0f 1e fa          	endbr64 
  401e54:	41 57                	push   %r15
  401e56:	49 89 d7             	mov    %rdx,%r15
  401e59:	41 56                	push   %r14
  401e5b:	49 89 f6             	mov    %rsi,%r14
  401e5e:	41 55                	push   %r13
  401e60:	41 89 fd             	mov    %edi,%r13d
  401e63:	41 54                	push   %r12
  401e65:	4c 8d 25 3c 0f 20 00 	lea    0x200f3c(%rip),%r12        # 602da8 <__frame_dummy_init_array_entry>
  401e6c:	55                   	push   %rbp
  401e6d:	48 8d 2d 3c 0f 20 00 	lea    0x200f3c(%rip),%rbp        # 602db0 <__init_array_end>
  401e74:	53                   	push   %rbx
  401e75:	4c 29 e5             	sub    %r12,%rbp
  401e78:	48 83 ec 08          	sub    $0x8,%rsp
  401e7c:	e8 87 ea ff ff       	callq  400908 <_init>
  401e81:	48 c1 fd 03          	sar    $0x3,%rbp
  401e85:	74 1f                	je     401ea6 <__libc_csu_init+0x56>
  401e87:	31 db                	xor    %ebx,%ebx
  401e89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401e90:	4c 89 fa             	mov    %r15,%rdx
  401e93:	4c 89 f6             	mov    %r14,%rsi
  401e96:	44 89 ef             	mov    %r13d,%edi
  401e99:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  401e9d:	48 83 c3 01          	add    $0x1,%rbx
  401ea1:	48 39 dd             	cmp    %rbx,%rbp
  401ea4:	75 ea                	jne    401e90 <__libc_csu_init+0x40>
  401ea6:	48 83 c4 08          	add    $0x8,%rsp
  401eaa:	5b                   	pop    %rbx
  401eab:	5d                   	pop    %rbp
  401eac:	41 5c                	pop    %r12
  401eae:	41 5d                	pop    %r13
  401eb0:	41 5e                	pop    %r14
  401eb2:	41 5f                	pop    %r15
  401eb4:	c3                   	retq   

0000000000401eb5 <.annobin___libc_csu_fini.start>:
  401eb5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401ebc:	00 00 00 00 

0000000000401ec0 <__libc_csu_fini>:
  401ec0:	f3 0f 1e fa          	endbr64 
  401ec4:	c3                   	retq   

Disassembly of section .fini:

0000000000401ec8 <_fini>:
  401ec8:	f3 0f 1e fa          	endbr64 
  401ecc:	48 83 ec 08          	sub    $0x8,%rsp
  401ed0:	48 83 c4 08          	add    $0x8,%rsp
  401ed4:	c3                   	retq   
